<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="428" d:DesignHeight="371"
             x:DataType="viewModels:LoginViewModel"
             x:CompileBindings="True"
             x:Class="WalletWasabi.Fluent.Login.Views.LoginView"
             xmlns:lang="using:WalletWasabi.Lang"
             xmlns:viewModels="clr-namespace:WalletWasabi.Fluent.Login.ViewModels">
  <ContentArea HorizontalAlignment="Stretch"
               ScrollViewer.VerticalScrollBarVisibility="Disabled"
               IsBusy="{Binding IsBusy}">
    <DockPanel HorizontalAlignment="Stretch"
               VerticalAlignment="Center"
               LastChildFill="True">
      <DockPanel.Styles>
        <Style Selector=":is(Panel).fadeAnimation[IsVisible=true]">
          <Setter Property="Opacity" Value="1" />
        </Style>
        <Style Selector=":is(Panel).fadeAnimation[IsVisible=False]">
          <Setter Property="Opacity" Value="0" />
        </Style>
        <Style Selector=":is(Panel).fadeAnimation">
          <Setter Property="Transitions">
            <Transitions>
              <DoubleTransition Property="Opacity" Duration="0:0:0.2" />
            </Transitions>
          </Setter>
        </Style>
      </DockPanel.Styles>

      <StackPanel MaxWidth="400" DockPanel.Dock="Bottom" Spacing="30">
        <TextBlock Text="{Binding WalletName}"
                   TextWrapping="Wrap"
                   TextAlignment="Center"
                   HorizontalAlignment="Center"
                   FontSize="{StaticResource FontSizeH3}"
                   Margin="0 10 0 0" />

        <DockPanel IsVisible="{Binding ErrorMessage, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                   Classes="fadeAnimation"
                   x:Name="DockPanel">
          <Interaction.Behaviors>
            <DataTriggerBehavior Binding="{Binding #DockPanel.IsVisible}" Value="True">
              <FocusControlActionCustom TargetControl="Password" />
            </DataTriggerBehavior>
          </Interaction.Behaviors>

          <!-- Enter password -->
          <DockPanel DockPanel.Dock="Top"
                     VerticalAlignment="Bottom"
                     IsVisible="{Binding IsPasswordNeeded}">
            <CopyablePasswordTextBox DockPanel.Dock="Top" Text="{Binding Password}" Watermark="{x:Static lang:Resources.OpenPasswordBoxWatermark}" PasswordChar="â€¢"
                                     Classes="revealPasswordButton copyablePasswordTextBox"
                                     x:Name="Password">
              <Interaction.Behaviors>
                <FocusOnAttachedBehavior />
              </Interaction.Behaviors>
              <CopyablePasswordTextBox.InnerRightContent>
                <StackPanel Orientation="Horizontal" Margin="0 0 1 0" Height="36">
                  <ToggleButton Classes="plain"
                                Theme="{StaticResource FluentTextBoxToggleButton}"
                                IsChecked="{Binding #Password.RevealPassword, Mode=TwoWay}"
                                ClipToBounds="True"
                                IsVisible="{Binding #Password.Text, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                    <Panel>
                      <PathIcon Data="{StaticResource PasswordBoxRevealButtonData}"
                                Height="8" Width="12"
                                IsVisible="{Binding !$parent[ToggleButton].IsChecked}"/>
                      <PathIcon Data="{StaticResource PasswordBoxHideButtonData}"
                                Height="12" Width="12"
                                IsVisible="{Binding $parent[ToggleButton].IsChecked}"/>
                    </Panel>
                  </ToggleButton>

                  <Button Content="{x:Static lang:Resources.Open}"
                          Focusable="False"
                          Classes="action"
                          Command="{Binding NextCommand}">
                    <Button.IsDefault>
                      <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="ErrorMessage" Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                        <Binding Path="IsActive" />
                      </MultiBinding>
                    </Button.IsDefault>
                    <Button.Styles>
                      <Style Selector="AccessText">
                        <Setter Property="VerticalAlignment" Value="Center" />
                      </Style>
                    </Button.Styles>
                  </Button>

                </StackPanel>
              </CopyablePasswordTextBox.InnerRightContent>
            </CopyablePasswordTextBox>
            <Panel Margin="0 5 0 0">

            </Panel>
          </DockPanel>

          <!-- Hardware & Watch only wallet -->
          <Button Content="{x:Static lang:Resources.Open}" IsVisible="{Binding !IsPasswordNeeded}" HorizontalAlignment="Center" Classes="action" Command="{Binding NextCommand}">
            <Button.IsDefault>
              <MultiBinding Converter="{x:Static BoolConverters.And}">
                <Binding Path="ErrorMessage" Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                <Binding Path="IsActive" />
              </MultiBinding>
            </Button.IsDefault>
          </Button>
        </DockPanel>

        <!-- Incorrect password -->
        <StackPanel Spacing="20"
                    Margin="0,11,0,0"
                    IsVisible="{Binding ErrorMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                    VerticalAlignment="Bottom"
                    Classes="fadeAnimation">
          <TextBlock Text="{Binding ErrorMessage}" HorizontalAlignment="Center" />
          <Button Content="OK" Focusable="False" Classes="action" HorizontalAlignment="Center" Command="{Binding OkCommand}">
            <Button.IsDefault>
              <MultiBinding Converter="{x:Static BoolConverters.And}">
                <Binding Path="ErrorMessage" Converter="{x:Static StringConverters.IsNotNullOrEmpty}" />
                <Binding Path="IsActive" />
              </MultiBinding>
            </Button.IsDefault>
          </Button>
        </StackPanel>
      </StackPanel>

      <!-- Icon -->
      <Viewbox MaxHeight="180" Margin="0 0 0 15">
        <WalletIconControl WalletType="{Binding WalletType}" />
      </Viewbox>
    </DockPanel>
  </ContentArea>
</UserControl>
