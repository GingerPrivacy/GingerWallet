<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Thickness x:Key="TextControlBorderThemeThickness">2</Thickness>
  <Thickness x:Key="TextControlBorderThemeThicknessFocused">2</Thickness>
  <Thickness x:Key="TextControlThemePadding">15,8,15,8</Thickness>

  <Design.PreviewWith>
    <StackPanel Spacing="4" Width="300">

      <TextBox Text="{Binding $self.Bounds.Height}"/>
      <TextBox Watermark="{Binding $self.Bounds.Height}" />
    </StackPanel>
  </Design.PreviewWith>

  <ControlTheme x:Key="TextBoxTheme" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="Template">
      <ControlTemplate>
        <DockPanel>

          <!-- TODO bind Content -> Header and ContentTemplate -> HeaderTemplate -->
          <ContentPresenter x:Name="PART_HeaderContentPresenter"
                            DockPanel.Dock="Top"
                            TextElement.FontWeight="Normal"
                            TextElement.Foreground="{DynamicResource TextControlHeaderForeground}"
                            IsVisible="False"
                            Margin="{DynamicResource TextBoxTopHeaderMargin}" />


          <DataValidationErrors DockPanel.Dock="Bottom" />

          <Panel>
            <Border
              Name="PART_BorderElement"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              MinWidth="{TemplateBinding MinWidth}"
              MinHeight="{TemplateBinding MinHeight}" />

            <Border Margin="{TemplateBinding BorderThickness}">
              <Grid ColumnDefinitions="Auto,*,Auto">
                <ContentPresenter Grid.Column="0" Grid.ColumnSpan="1" Content="{TemplateBinding InnerLeftContent}" />
                <DockPanel x:Name="PART_InnerDockPanel" Grid.Column="1" Grid.ColumnSpan="1" Margin="{TemplateBinding Padding}">
                  <TextBlock Name="PART_FloatingWatermark"
                             Foreground="{DynamicResource SystemAccentColor}"
                             FontSize="{TemplateBinding FontSize}"
                             Text="{TemplateBinding Watermark}"
                             IsVisible="{TemplateBinding UseFloatingWatermark}"
                             DockPanel.Dock="Top" />
                  <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                    <Panel>
                      <TextBlock Name="PART_Watermark"
                                 Opacity="0.5"
                                 Text="{TemplateBinding Watermark}"
                                 TextAlignment="{TemplateBinding TextAlignment}"
                                 TextWrapping="{TemplateBinding TextWrapping}"
                                 IsVisible="{TemplateBinding Text, Converter={x:Static StringConverters.IsNullOrEmpty}}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                      <TextPresenter Name="PART_TextPresenter"
                                     Text="{TemplateBinding Text, Mode=TwoWay}"
                                     CaretIndex="{TemplateBinding CaretIndex}"
                                     SelectionStart="{TemplateBinding SelectionStart}"
                                     SelectionEnd="{TemplateBinding SelectionEnd}"
                                     TextAlignment="{TemplateBinding TextAlignment}"
                                     TextWrapping="{TemplateBinding TextWrapping}"
                                     LineHeight="{TemplateBinding LineHeight}"
                                     LetterSpacing="{TemplateBinding LetterSpacing}"
                                     PasswordChar="{TemplateBinding PasswordChar}"
                                     RevealPassword="{TemplateBinding RevealPassword}"
                                     SelectionBrush="{TemplateBinding SelectionBrush}"
                                     SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                     CaretBrush="{TemplateBinding CaretBrush}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Panel>
                    <ScrollViewer.Styles>
                      <Style Selector="ScrollContentPresenter#PART_ContentPresenter">
                        <Setter Property="Cursor" Value="IBeam" />
                      </Style>
                    </ScrollViewer.Styles>
                  </ScrollViewer>
                </DockPanel>
                <StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="10">
                  <Panel x:Name="CheckmarkHost">
                    <PathIcon  Classes="checkMark" VerticalAlignment="Center">
                      <Interaction.Behaviors>
                        <CheckMarkVisibilityBehavior />
                      </Interaction.Behaviors>
                    </PathIcon>
                  </Panel>
                    <ContentPresenter Content="{TemplateBinding InnerRightContent}" />
                  </StackPanel>
              </Grid>
            </Border>
          </Panel>
        </DockPanel>
      </ControlTemplate>
    </Setter>

    <Style Selector="^">
      <Setter Property="MinHeight" Value="42" />
    </Style>

    <Style Selector="^/template/ Border#PART_BorderElement">
      <Setter Property="CornerRadius" Value="20" />
    </Style>

    <Style Selector="^/template/ DataValidationErrors">
      <Setter Property="Margin" Value="0 -16 0 0" />
      <Setter Property="RenderTransform" Value="scale(1,0)" />
      <Setter Property="RenderTransformOrigin" Value="0.5,0" />
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" Delay="0:0:0.1" Easing="{StaticResource FluentEasing}" />
          <ThicknessTransition Property="Margin" Duration="0:0:0.1" Easing="{StaticResource FluentEasing}" />
        </Transitions>
      </Setter>
    </Style>
    <Style Selector="^:error /template/ DataValidationErrors">
      <Setter Property="Margin" Value="0 5 0 0" />
      <Setter Property="RenderTransform" Value="scale(1,1)" />
    </Style>

    <Style Selector="^.revealPasswordButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
      <Setter Property="InnerRightContent">
        <Template>
          <ToggleButton Theme="{StaticResource FluentTextBoxToggleButton}"
                        IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=TwoWay}"
                        ClipToBounds="True">
            <Panel>
              <PathIcon Data="{StaticResource PasswordBoxRevealButtonData}"
                        Height="8" Width="12"
                        IsVisible="{Binding !$parent[ToggleButton].IsChecked}"/>
              <PathIcon Data="{StaticResource PasswordBoxHideButtonData}"
                        Height="12" Width="12"
                        IsVisible="{Binding $parent[ToggleButton].IsChecked}"/>
            </Panel>
          </ToggleButton>
        </Template>
      </Setter>
    </Style>

  </ControlTheme>

  <ControlTheme  x:Key="SelectableTextBlockTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">

      <Setter Property="IsReadOnly" Value="True" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="MinHeight" Value="0" />
      <Setter Property="MinWidth" Value="0" />
      <Setter Property="CaretBrush" Value="Transparent" />
      <Setter Property="TextWrapping" Value="Wrap" />

      <Setter Property="ContextMenu">
        <ContextMenu>
          <MenuItem Header="Copy" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}" InputGesture="{x:Static TextBox.CopyGesture}" />
        </ContextMenu>
      </Setter>

      <Setter Property="Template">
        <ControlTemplate>
          <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                        VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
            <TextPresenter Name="PART_TextPresenter"
                           Text="{TemplateBinding Text, Mode=TwoWay}"
                           CaretIndex="{TemplateBinding CaretIndex}"
                           SelectionStart="{TemplateBinding SelectionStart}"
                           SelectionEnd="{TemplateBinding SelectionEnd}"
                           TextAlignment="{TemplateBinding TextAlignment}"
                           TextWrapping="{TemplateBinding TextWrapping}"
                           PasswordChar="{TemplateBinding PasswordChar}"
                           RevealPassword="{TemplateBinding RevealPassword}"
                           SelectionBrush="{TemplateBinding SelectionBrush}"
                           SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                           CaretBrush="{TemplateBinding CaretBrush}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <ScrollViewer.Styles>
              <Style Selector="ScrollContentPresenter#PART_ContentPresenter">
                <Setter Property="Cursor" Value="IBeam" />
              </Style>
            </ScrollViewer.Styles>
          </ScrollViewer>
        </ControlTemplate>
      </Setter>

  </ControlTheme>

  <ControlTheme x:Key="FluentTextBoxToggleButton"
                TargetType="ToggleButton"
                BasedOn="{StaticResource FluentTextBoxButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <ContentPresenter x:Name="PART_ContentPresenter"
                            Background="{TemplateBinding Background}"
                            Content="{TemplateBinding Content}"
                            Padding="{TemplateBinding Padding}">
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style Selector="^:checked /template/ ContentPresenter, ^:indeterminate /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Foreground" Value="{DynamicResource TextControlButtonForegroundPressed}" />
    </Style>

    <Style Selector="^:pressed /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
  </ControlTheme>

</ResourceDictionary>
