<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lang="clr-namespace:WalletWasabi.Lang;assembly=WalletWasabi"
                    xmlns:converters="clr-namespace:WalletWasabi.Fluent.Converters">

  <Design.PreviewWith>
    <Border Width="500" Height="500">
      <Border Padding="60">
        <StackPanel Spacing="20">

          <SplitButton>Split button</SplitButton>

          <SubActionButton Content="Subaction Button" Icon="{StaticResource wallet_action_buy}">
            <SubActionButton.SubCommands>
              <UICommandCollection>
                <UICommandDesign Name="Cmd 1" IsDefault="True">
                  <UICommandDesign.Icon>
                    <PathIcon Data="{StaticResource wallet_action_coinjoin}"
                              Classes="Icon" />
                  </UICommandDesign.Icon>
                </UICommandDesign>
                <UICommandDesign Name="Coommmaannd 2" IsDefault="True">
                  <UICommandDesign.Icon>
                    <PathIcon Data="{StaticResource wallet_action_coinjoin}"
                              Classes="Icon" />
                  </UICommandDesign.Icon>
                </UICommandDesign>

                <UICommandDesign Name="Command 3">
                  <UICommandDesign.Icon>
                    <PathIcon Data="{StaticResource wallet_action_coinjoin}"
                              Classes="Icon" />
                  </UICommandDesign.Icon>
                </UICommandDesign>
              </UICommandCollection>
            </SubActionButton.SubCommands>
          </SubActionButton>

          <Button Theme="{StaticResource FunctionButton}">Hola</Button>
          <Button Classes="function">Hola</Button>

        </StackPanel>
      </Border>
    </Border>
  </Design.PreviewWith>

  <ControlTheme x:Key="{x:Type SubActionButton}" TargetType="SubActionButton">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="CornerRadius" Value="16" />
    <Setter Property="MinHeight" Value="33" />
    <Setter Property="Padding" Value="{StaticResource FunctionButtonPadding}" />
    <Setter Property="Foreground" Value="{DynamicResource ActionButtonForegroundColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <SplitButton Command="{TemplateBinding Command}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       Padding="{TemplateBinding Padding}"
                       Width="{TemplateBinding Width}"
                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       Foreground="{TemplateBinding Foreground}"
                       Content="{TemplateBinding Content}"
                       CornerRadius="{TemplateBinding CornerRadius}"
                       Theme="{StaticResource FunctionSplitButton}">
            <SplitButton.ContentTemplate>
              <DataTemplate>
                <DockPanel>
                  <PathIcon Foreground="{Binding $parent[SubActionButton].Foreground}" x:Name="PART_Icon" Margin="0 0 10 0" Data="{Binding $parent[SubActionButton].Icon}" IsVisible="{Binding !!$parent[SubActionButton].Icon}" />
                  <ContentControl VerticalAlignment="Center" Content="{Binding $parent[SubActionButton].Content}" />
                </DockPanel>
              </DataTemplate>
            </SplitButton.ContentTemplate>
            <SplitButton.Flyout>
              <MenuFlyout ItemsSource="{Binding $parent[SubActionButton].SubCommands}" Placement="Bottom">
                <MenuFlyout.ItemContainerTheme>
                  <ControlTheme TargetType="MenuItem"
                                BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter x:DataType="IUICommand" Property="HeaderTemplate">
                      <Setter.Value>
                        <DataTemplate DataType="IUICommand">
                          <StackPanel Orientation="Horizontal" Spacing="10">
                            <TextBlock Text="{Binding Name}" />
                            <Ellipse Classes="hide" Classes.show="{Binding IsDefault}"
                                     ToolTip.Tip="{x:Static lang:Resources.Default}"
                                     Height="9" Width="9"
                                     Fill="{DynamicResource SystemAccentColor}">
                              <Ellipse.Transitions>
                                <Transitions>
                                  <TransformOperationsTransition Property="RenderTransform"
                                                                 Duration="0:0:0.125"
                                                                 Easing="{StaticResource FluentEasing}" />
                                  <DoubleTransition Property="Opacity" Duration="0:0:0.125"
                                                    Easing="{StaticResource FluentEasing}" />
                                </Transitions>
                              </Ellipse.Transitions>
                              <Ellipse.Styles>
                                <Style Selector="Ellipse.hide">
                                  <Setter Property="Opacity" Value="0" />
                                  <Setter Property="RenderTransform" Value="scale(0,0)" />
                                </Style>
                                <Style Selector="Ellipse.show">
                                  <Setter Property="Opacity" Value="1" />
                                  <Setter Property="RenderTransform" Value="scale(1,1)" />
                                </Style>
                              </Ellipse.Styles>
                            </Ellipse>
                          </StackPanel>
                        </DataTemplate>
                      </Setter.Value>
                    </Setter>
                    <Setter x:DataType="IUICommand" Property="Icon" Value="{Binding Icon}" />
                    <Setter x:DataType="IUICommand" Property="Command" Value="{Binding Command}" />
                    <Setter x:DataType="IUICommand" Property="ContextMenu">
                      <ContextMenu>
                        <ContextMenu.IsVisible>
                          <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="IsDefault" Converter="{x:Static BoolConverters.Not}" />
                            <Binding Path="Key" Converter="{x:Static StringConverters.IsNotNullOrEmpty}" />
                            <Binding Path="$parent[SubActionButton].DefaultSource"
                                     Converter="{x:Static converters:DefaultSourceConverters.NotNone}" />
                          </MultiBinding>
                        </ContextMenu.IsVisible>
                        <MenuItem Header="{x:Static lang:Resources.SetAsDefault}"
                                  Command="{Binding $parent[SubActionButton].SetDefaultCommand}"
                                  CommandParameter="{Binding Key}">
                          <MenuItem.Icon>
                            <PathIcon Data="{StaticResource star}" Opacity="0.6" Height="18" />
                          </MenuItem.Icon>
                        </MenuItem>
                      </ContextMenu>
                    </Setter>
                  </ControlTheme>
                </MenuFlyout.ItemContainerTheme>
              </MenuFlyout>
            </SplitButton.Flyout>
          </SplitButton>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

  </ControlTheme>

</ResourceDictionary>
